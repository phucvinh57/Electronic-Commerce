version: '3'

services:
  user:
    image: postgres:15
    container_name: ecommerce_user
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - app_network
    volumes:
      - userdb:/var/lib/postgresql/data
    # restart: always

  auth:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:4.0
    depends_on:
      - user
    ports:
      - ${SUPERTOKENS_PORT}:3567
    environment:
      POSTGRESQL_HOST: ecommerce_user
      POSTGRESQL_PORT: 5432
      POSTGRESQL_DATABASE_NAME: ${POSTGRES_DB}
      POSTGRESQL_USER: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_CONNECTION_POOL_SIZE: 10
      PASSWORD_RESET_TOKEN_LIFETIME: 7200000
    networks:
      - app_network
    # restart: always 
  
  mongo:
    build: 
      context: ./docker
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: bkushop
      MONGO_REPLICA_HOST: localhost
      MONGO_REPLICA_PORT: ${MONGO_PORT}
    volumes:
      - bkushop_mongodb:/data/db
      - ./docker/init:/docker-entrypoint-initdb.d:ro
    networks:
      - app_network
    # restart: always
  
  adminer:
    image: adminer
    ports:
      - 8080:8080
    restart: always
    networks:
      - app_network

volumes:
  userdb:
  bkushop_mongodb:

networks:
  app_network:
